from psycopg2.extensions import AsIs


def insert_tags(tags, db_cursor, generate_ids = False):
    """
    Inserts a list of tags into tags table.
    If `generate_ids` is true, values for tag IDs will be generated by the database.
    """
    # query
    field_order = ["tag_id", "created_at", "modified_at", "tag_name", "tag_description", "is_published"]
    if generate_ids: field_order = field_order[1:]
    fields_tuple = "(" + ", ".join(field_order) + ")"
    values = "(%s, %s, %s, %s, %s)" if generate_ids else "(%s, %s, %s, %s, %s, %s)"
    query = f"INSERT INTO %s {fields_tuple} VALUES " + ", ".join((values for _ in range(len(tags))))
    
    # params
    table = "tags"
    params = [AsIs(table)]
    for u in tags:
        for f in field_order:
            params.append(u[f])

    db_cursor.execute(query, params)


def delete_tags(tag_ids, db_cursor):
    """
    Deletes tags with provided IDs (this should also result in a cascade delete of related data from other tables).
    """
    table = "tags"
    query = "DELETE FROM %s WHERE tag_id IN (" + ", ".join(("%s" for _ in range(len(tag_ids)))) + ")"
    params = [AsIs(table)]
    params.extend(tag_ids)
    db_cursor.execute(query, params)
