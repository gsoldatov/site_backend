from psycopg2.extensions import AsIs


def insert_users(users, db_cursor, generate_ids = False):
    """
    Inserts a list of `users` into users table.
    If `generate_ids` is true, values for user IDs will be generated by the database.
    """
    # query
    field_order = ["user_id", "registered_at", "login", "password", "username", "user_level", "can_login", "can_edit_objects"]
    if generate_ids: field_order = field_order[1:]
    fields_tuple = "(" + ", ".join(field_order) + ")"
    values = "(%s, %s, crypt(%s, gen_salt('bf')), %s, %s, %s, %s)" if generate_ids \
        else "(%s, %s, %s, crypt(%s, gen_salt('bf')), %s, %s, %s, %s)"
    query = f"INSERT INTO %s {fields_tuple} VALUES " + ", ".join((values for _ in range(len(users))))
    
    # params
    table = "users"
    params = [AsIs(table)]
    for u in users:
        for f in field_order:
            params.append(u[f])

    db_cursor.execute(query, params)


def clear_users(db_cursor):
    """
    Truncates `users` and, consequently, `sessions` table
    """
    db_cursor.execute("TRUNCATE TABLE users RESTART IDENTITY CASCADE")
